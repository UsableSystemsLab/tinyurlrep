version: "3"
services:
  db:
    image: postgres:14.5
    container_name: postgres
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PW}
      - POSTGRES_DB=demo
      - PGDATA=/var/lib/postgresql/data/pg_data
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - ./init-database.sql:/docker-entrypoint-initdb.d/init.sql
      - ./pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${PG_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5
  pgadmin:
    image: dpage/pgadmin4:6.18
    container_name: pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_MAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PW}
    ports:
      - "5050:80"
  server:
    build: ./server/
    container_name: express
    ports:
      - "5000:8080"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "wget", "http://localhost:8080/health" ]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
  client:
    build: ./client-code/
    container_name: react-container
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true
    depends_on:
      server:
        condition: service_healthy
volumes:
  pg_data:


